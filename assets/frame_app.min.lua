local a=require('data.min')local b=require('battery.min')local c=require('camera.min')local d=require('sprite.min')local e=require('code.min')local f=require('plain_text.min')CAPTURE_SETTINGS_MSG=0x0d;HOTDOG_MSG=0x0e;HOTDOG_SPRITE=0x20;HOTDOG_TEXT=0x21;NOT_HOTDOG_SPRITE=0x22;NOT_HOTDOG_TEXT=0x23;TEXT_MSG=0x0a;TAP_SUBS_MSG=0x10;a.parsers[CAPTURE_SETTINGS_MSG]=c.parse_capture_settings;a.parsers[HOTDOG_MSG]=e.parse_code;a.parsers[HOTDOG_SPRITE]=d.parse_sprite;a.parsers[HOTDOG_TEXT]=d.parse_sprite;a.parsers[NOT_HOTDOG_SPRITE]=d.parse_sprite;a.parsers[NOT_HOTDOG_TEXT]=d.parse_sprite;a.parsers[TEXT_MSG]=f.parse_plain_text;a.parsers[TAP_SUBS_MSG]=e.parse_code;TAP_MSG=0x09;function handle_tap()rc,err=pcall(frame.bluetooth.send,string.char(TAP_MSG))if rc==false then print(err)end end;function print_text()local g=0;for h in a.app_data[TEXT_MSG].string:gmatch("([^\n]*)\n?")do if h~=""then frame.display.text(h,1,g*60+1)g=g+1 end end end;function clear_display()frame.display.text(" ",1,1)frame.display.show()frame.sleep(0.04)end;function show_flash()frame.display.bitmap(241,191,160,2,0,string.rep("\xFF",400))frame.display.bitmap(311,121,20,2,0,string.rep("\xFF",400))frame.display.show()frame.sleep(0.04)end;function app_loop()clear_display()local i=0;while true do rc,err=pcall(function()local j=a.process_raw_items()if j>0 then if a.app_data[CAPTURE_SETTINGS_MSG]~=nil then show_flash()rc,err=pcall(c.capture_and_send,a.app_data[CAPTURE_SETTINGS_MSG])clear_display()if rc==false then print(err)end;a.app_data[CAPTURE_SETTINGS_MSG]=nil end;if a.app_data[HOTDOG_MSG]~=nil then if a.app_data[HOTDOG_MSG].value==1 then if a.app_data[HOTDOG_SPRITE]~=nil then local k=a.app_data[HOTDOG_SPRITE]frame.display.bitmap(450,136,k.width,2^k.bpp,0,k.pixel_data)end;if a.app_data[HOTDOG_TEXT]~=nil then local k=a.app_data[HOTDOG_TEXT]frame.display.bitmap(203,166,k.width,2^k.bpp,9,k.pixel_data)end else if a.app_data[NOT_HOTDOG_SPRITE]~=nil then local k=a.app_data[NOT_HOTDOG_SPRITE]frame.display.bitmap(450,136,k.width,2^k.bpp,0,k.pixel_data)end;if a.app_data[NOT_HOTDOG_TEXT]~=nil then local k=a.app_data[NOT_HOTDOG_TEXT]frame.display.bitmap(69,166,k.width,2^k.bpp,2,k.pixel_data)end end;frame.display.show()a.app_data[HOTDOG_MSG]=nil end;if a.app_data[TEXT_MSG]~=nil and a.app_data[TEXT_MSG].string~=nil then print_text()frame.display.show()a.app_data[TEXT_MSG]=nil end;if a.app_data[TAP_SUBS_MSG]~=nil then if a.app_data[TAP_SUBS_MSG].value==1 then print('subscribing for taps')frame.imu.tap_callback(handle_tap)else print('cancel subscription for taps')frame.imu.tap_callback(nil)end;a.app_data[TAP_SUBS_MSG]=nil end end;i=b.send_batt_if_elapsed(i,120)if c.is_auto_exp then c.run_auto_exposure()end;frame.sleep(0.1)end)if rc==false then print(err)frame.display.text(" ",1,1)frame.display.show()frame.sleep(0.04)break end end end;app_loop()